###将ssRNAseq数据组装  比如侵染阶段数据 补充更多的转录本

#先用hisat2将seq数据比对到参考基因组（加--dta参数）
nohup hisat2pip.py -g /mnt/d/db/genome_db/Marssonina_coronaria/hisat2/MC.XN21 -s 1 -d data -o data/data.outdir -t 12 1>data/hisat2_log.txt 2>&1 &
自编脚本stringtie.sh #利用stringtie基于比对后的bam组装转录本
stringtie.sh data/data.outdir/bam assemble

  #单个样本组装完成后，会合并所有样本的转录本组装结果，得到一个非冗余的转录本集合，使用taco进行merge
/mnt/d/sf/taco-v0.7.3.Linux_x86_64/taco_run gtf_files.txt

#gffread提取转录本序列  或tbtools提取
gffread merge.assembly.gtf -w ssRNA.transcript.all.fa -g ../../MC.XN21.genome.chr.ultra.fasta

#对这个转录本进行计数 并计算tpm值 只保留所有样本中至少有一个样本TPM大于1的转录本
nohup featureCounts -p -s 2 -t exon -g transcript_id -a merge.assembly.gtf -o rnaseq.raw.tsv /mnt/d/data/XN21/isoseq/ssrna组装/data/data.outdir/bam/*.bam &
#用quicktools计算TPM
awk 'BEGIN{FS=",";OFS="\t"}{if ($2 > 1 || $3 >1 || $4 > 1 || $5 > 1 || $6 > 1 || $7 > 1 || $8 >1){print $1}}' tpm.csv > select.transcript.list
#过滤不合标准的转录本
tbtools  根据基因列表提取序列           得到ssRNA.transcript.fa
手动删除一些比如aaaaaaaaa之类序列




##tama去冗余

minimap2 -ax splice -t 16 -uf --secondary=no -C5 ../../MC.XN21.genome.chr.ultra.fasta ssRNA.transcript.fa > ssRNA.transcript.sam
samtools sort -@ 30 ssRNA.transcript.sam > ssRNA.transcript.sort.bam

samtools view -@ 30 -h ssRNA.transcript.sort.bam >ssRNA.transcript.sort.sam


python /mnt/d/sf/tama-master/tama_collapse.py -s ssRNA.transcript.sort.sam -f ../../MC.XN21.genome.chr.ultra.fasta -p ssrna_tama -x no_cap -e common_ends -c 50 -i 50 -m 20 -a 1000



#######################另一种思路

#单个样本组装完成后，先不合并所有样本的转录本组装结果
先根据stringtie产生的TPM 筛选TPM低于5的转录本
用脚本  del_lowTPMtranscript.sh
最终获得filter.gtf文件，以及用gffread提取的转录本序列 以及比对后sort的sam文件 用于下一步tama

for i in `ls *sort.bam`;do python /mnt/d/sf/tama-master/tama_collapse.py -s $i -f /mnt/d/data/XN21/pacbio/MC.XN21.genome.chr.ultra.fasta -p ${i%%.*}_tama -x no_cap -e common_ends -c 50 -i 50 -m 20 -a 99999999;done
#将各个来源的merge 来源过多的情况下 增加-a参数 减少一些因为5'端降解导致的不必要的转录本python /mnt/d/sf/tama-master/tama_merge.py -f filelist.txt -p ss_tama -e common_ends -d merge_dup -a 99999999
